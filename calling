#! /bin/sh

#Created by Anne-Sophie DenommÃ©-Pichon
#2015-12-06

FASTQ1="$1"
FASTQ2="$2"
BAM="$3"
SAM=$(echo "$BAM" | sed 's/.bam$/.sam/')
GVCF=$(echo "$BAM" | sed 's/.bam$/.gvcf/')
VCF=$(echo "$BAM" | sed 's/.bam$/.vcf/')
SAMPLE=$(echo "$BAM" | sed 's@\(.*/\)\?\([^/]*\).bam$@\2@')

THREADS=24
MEMORY=16g

error() { echo "Error at step: $1"; exit 1; }

dl() { test -f "$1" || wget "$2" -O "$1" || error "$3"; }
dl_gz() { test -f "$1" || wget "$2" -O - | gunzip > "$1" || error "$3"; }

############################ RESOURCES ############################

#Get reference genome file from 1kG
dl_gz ~/db/human_g1k_v37.fasta ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.gz 'GRCh37 FASTA'
dl ~/db/human_g1k_v37.fasta.fai ftp://ftp.1000genomes.ebi.ac.uk/vol1/ftp/technical/reference/human_g1k_v37.fasta.fai 'GRCh37 FASTA index'
test -f ~/db/human_g1k_v37.dict || picard-tools CreateSequenceDictionary R=~/db/human_g1k_v37.fasta O=~/db/human_g1k_v37.dict || error 'GRCh37 dict'
test -f ~/db/human_g1k_v37.fasta.bwt || bwa index -a bwtsw ~/db/human_g1k_v37.fasta || error 'GRCh37 BWT'

#Get indel sites from 1kG
dl_gz ~/db/1000G_phase1.indels.b37.vcf ftp://gsapubftp-anonymous:@ftp.broadinstitute.org/bundle/2.8/b37/1000G_phase1.indels.b37.vcf.gz '1000G indel sites'

#Get capture files
test -f ~/db/Agilent/S04380110_Covered.bed || (echo 'ERROR - Capture .bed are missing. To get the capture .bed, download the data from https://earray.chem.agilent.com/suredesign. Just create an account, log in, and select the "Find Designs" tab, then "SureSelect DNA" then under that select "Agilent Catalog", then there should be a list of the different SureSelect related bed files and whatnot.' && exit 1)
test -f ~/db/Agilent/S04380110_Covered_noprefix.bed || grep -v '^(browser|track)' ~/db/Agilent/S04380110_Covered.bed | sed 's/^chr//' > ~/db/Agilent/S04380110_Covered_noprefix.bed || error 'Agilent covered bed'

#Get dbSNP database
dl_gz ~/db/dbSNP/GRCh37p13_dbsnp146_00-All.vcf ftp://ftp.ncbi.nlm.nih.gov/snp/organisms/human_9606_b146_GRCh37p13/VCF/00-All.vcf.gz 'dbSNP VCF'

# Get VQSR resources
dl_gz ~/db/hapmap_3.3.b37.vcf ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/hapmap_3.3.b37.vcf.gz 'HapMap sites'
dl_gz ~/db/hapmap_3.3.b37.vcf.idx ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/hapmap_3.3.b37.vcf.idx.gz 'HapMap sites index'
dl_gz ~/db/1000G_omni2.5.b37.vcf ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/1000G_omni2.5.b37.vcf.gz  '1000G omni sites'
dl_gz ~/db/1000G_omni2.5.b37.vcf.idx ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/1000G_omni2.5.b37.vcf.idx.gz '1000G omni sites index'
dl_gz ~/db/1000G_phase1.snps.high_confidence.b37.vcf ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/1000G_phase1.snps.high_confidence.b37.vcf.gz '1000G high confidence sites'
dl_gz ~/db/1000G_phase1.snps.high_confidence.b37.vcf.idx ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/1000G_phase1.snps.high_confidence.b37.vcf.idx.gz '1000G high confidence sites index'
dl_gz ~/db/dbsnp_138.b37.vcf ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/dbsnp_138.b37.vcf.gz 'dbSNP sites'
dl_gz ~/db/dbsnp_138.b37.vcf.idx ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/dbsnp_138.b37.vcf.idx.gz 'dbSNP sites index'
dl_gz ~/db/Mills_and_1000G_gold_standard.indels.b37.vcf ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/Mills_and_1000G_gold_standard.indels.b37.vcf.gz 'Mills sites'
dl_gz ~/db/Mills_and_1000G_gold_standard.indels.b37.vcf.idx ftp://gsapubftp-anonymous@ftp.broadinstitute.org/bundle/2.8/b37/Mills_and_1000G_gold_standard.indels.b37.vcf.idx.gz 'Mills sites index'

############################ ALIGNMENT ############################

# TODO add cutadapt if necessary (cf. FASTQC)

#Align with BWA
  #-M Mark shorter split hits as secondary (for Picard compatibility)
  #-R Complete read group header line
bwa mem -t $THREADS -M -R "@RG\tID:exome\tSM:${SAMPLE}\tPL:illumina\tLB:agilent_v5" ~/db/human_g1k_v37.fasta "$FASTQ1" "$FASTQ2" > "$SAM" || error 'Alignment'

samtools view -hb "$SAM" > "$BAM" || error 'SAM to BAM'
samtools sort -o -@ $THREADS "$BAM" _ > "$BAM.sorted.bam" || error 'BAM sort'

#Flag BAM duplicates with Picard
picard-tools MarkDuplicates REMOVE_DUPLICATES=false METRICS_FILE="$BAM.dup.log" I="$BAM.sorted.bam" O="$BAM.duplicates.bam" || error 'MarkDuplicates'
samtools index "$BAM.duplicates.bam" || error 'BAM index'

#Realign indels
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nt $THREADS \
	-T RealignerTargetCreator \
		-L ~/db/Agilent/S04380110_Covered_noprefix.bed \
	-R ~/db/human_g1k_v37.fasta \
	-known ~/db/1000G_phase1.indels.b37.vcf \
	-I "$BAM.duplicates.bam" \
	-o "$BAM.target.list" || error 'Realignment targets creation'

java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-T IndelRealigner \
	-R ~/db/human_g1k_v37.fasta \
	-I "$BAM.duplicates.bam" \
		-known ~/db/1000G_phase1.indels.b37.vcf \
	-targetIntervals "$BAM.target.list" \
	-o "$BAM.realigned.bam" || error 'Indels realignment'

#Recalibrate bases
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nct $THREADS \
	-T BaseRecalibrator \
		-L ~/db/Agilent/S04380110_Covered_noprefix.bed \
	-R ~/db/human_g1k_v37.fasta \
	-I "$BAM.realigned.bam" \
	-knownSites ~/db/dbSNP/GRCh37p13_dbsnp146_00-All.vcf \
	-o "$BAM.bases" || error 'Bases computation for recalibration'

java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nct $THREADS \
	-T PrintReads \
	-R ~/db/human_g1k_v37.fasta \
	-I "$BAM.realigned.bam" \
	-BQSR "$BAM.bases" \
	-o "$BAM.recalibrated.bam" || error 'Base recalibration'

############################  CALLING  ############################

#Split the Capture .bed  file into 24 files
#For now, not used in the calling. I have to implement this.
#nb_line_bed=$(wc -l ~/db/Agilent/S04380110_Covered_noprefix.bed | awk '{print $1}')
#nb_line_split=$(((nb_line_bed+THREADS-1)/THREADS))
#for i in $(seq THREADS)
#	do
#		test -f ~/db/Agilent/S04380110_Covered_noprefix_$i.bed || \
#		sed -n "$((nb_line_split*(i-1))),$((nb_line_split*i-1)) p" ~/db/Agilent/S04380110_Covered_noprefix.bed > ~/db/Agilent/S04380110_Covered_noprefix_$i.bed
#	done

#Call variants with GATK HaplotypeCaller in gVCF
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nct $THREADS \
	-T HaplotypeCaller \
		-ERC GVCF \
		--variant_index_type LINEAR \
		--variant_index_parameter 128000 \
		-L:capture,BED ~/db/Agilent/S04380110_Covered_noprefix.bed \
	-R ~/db/human_g1k_v37.fasta \
	-stand_call_conf 30.0 \
	-stand_emit_conf 10.0 \
	-S SILENT \
	-I "$BAM.recalibrated.bam" \
	--dbsnp:vcfinput,VCF ~/db/dbSNP/GRCh37p13_dbsnp146_00-All.vcf \
	-o "$GVCF"

# Generate VCF from gVCF
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nt $THREADS \
	-T GenotypeGVCFs \
		-L ~/db/Agilent/S04380110_Covered_noprefix.bed \
	-R ~/db/human_g1k_v37.fasta \
	-V "$GVCF" \
	-o "$VCF" || error 'Genotyping'

# Compute VQSR model for SNPs
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nt $THREADS \
	-T VariantRecalibrator \
	-mode SNP \
	-R ~/db/human_g1k_v37.fasta \
	-input "$VCF" \
	-resource:hapmap,known=false,training=true,truth=true,prior=15.0 ~/db/hapmap_3.3.b37.vcf \
	-resource:omni,known=false,training=true,truth=true,prior=12.0 ~/db/1000G_omni2.5.b37.vcf \
	-resource:1000G,known=false,training=true,truth=false,prior=10.0 ~/db/1000G_phase1.snps.high_confidence.b37.vcf \
	-resource:dbsnp,known=true,training=false,truth=false,prior=2.0 ~/db/dbsnp_138.b37.vcf \
		-an FS \
		-an MQ \
		-an MQRankSum \
		-an QD \
		-an ReadPosRankSum \
		-an SOR \
	-recalFile "$VCF.SNP.recal" \
	-tranchesFile "$VCF.SNP.tranches"

# TODO FIXME if nbSamples > 10 and unrelated, add -an InbreedingCoeff

# Apply VQSR model for SNPs
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-T ApplyRecalibration \
	-mode SNP \
	-R ~/db/human_g1k_v37.fasta \
	-input "$VCF" \
	--ts_filter_level 99.5 \
	-recalFile "$VCF.SNP.recal" \
	-tranchesFile "$VCF.SNP.tranches" \
	-o "$VCF.snp_recalibrated.vcf"

# Compute VQSR model for indels
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nt $THREADS \
	-T VariantRecalibrator \
	-mode INDEL \
	-R ~/db/human_g1k_v37.fasta \
	-input "$VCF" \
	-resource:mills,known=false,training=true,truth=true,prior=12.0 ~/db/Mills_and_1000G_gold_standard.indels.b37.vcf \
	-resource:dbsnp,known=true,training=false,truth=false,prior=2.0 ~/db/dbsnp_138.b37.vcf \
		-an FS \
		-an MQRankSum \
		-an QD \
		-an ReadPosRankSum \
		-an SOR \
	--maxGaussians 4 \
	-recalFile "$VCF.indels.recal" \
	-tranchesFile "$VCF.indels.tranches"

# Apply VQSR model for SNPs
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-T ApplyRecalibration \
	-mode INDEL \
	-R ~/db/human_g1k_v37.fasta \
	-input "$VCF.snp_recalibrated.vcf" \
	--ts_filter_level 99.0 \
	-recalFile "$VCF.indels.recal" \
	-tranchesFile "$VCF.indels.tranches" \
	-o "$VCF.all_recalibrated.vcf"

# Filter variants on VQSR results
java -Xmx$MEMORY -jar ~/tools/GATK/GenomeAnalysisTK.jar \
	-nt $THREADS \
	-T SelectVariants \
	-R ~/db/human_g1k_v37.fasta \
	-V "$VCF.all_recalibrated.vcf" \
	-o "$VCF.filtered.vcf" \
	-env
